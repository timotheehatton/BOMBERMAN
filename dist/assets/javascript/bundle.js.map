{"version":3,"sources":["node_modules/browser-pack/_prelude.js","../sources/javascript/game_bomb.js","../sources/javascript/game_characters.js","../sources/javascript/game_ia.js","../sources/javascript/game_map.js","../sources/javascript/index.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import {exportMap, exportMapSize} from './game_map.js';\nimport {playerStatus} from './game_characters.js';\n\nvar bombStatus =  []\n\nclass Bomb {\n  constructor(player, posX, posY, power)\n  {\n    this.bombRange = []\n    this.bombBreak = []\n    this.player = player\n    this.posX = posX\n    this.posY = posY\n    this.posXNew = this.posX * 50\n    this.posYNew = this.posY * 50\n    this.power = power\n    this.delay = 2000\n    this.container = document.querySelector('.map')\n  }\n\n  setDiv()\n  {\n    let that = this\n    let createDiv = document.createElement('div')\n    createDiv.classList.add('map--bomb')\n    createDiv.classList.add('map--bomb')\n    createDiv.setAttribute('id', 'bomb'+ that.posXNew + that.posYNew)\n    createDiv.style.left = that.posXNew + 'px'\n    createDiv.style.top = that.posYNew + 'px'\n    that.container.appendChild(createDiv)\n  }\n\n  setRange(posX, posY)\n  {\n    let that = this\n    let createDiv = document.createElement('div')\n    createDiv.classList.add('map--bomb-range')\n    createDiv.style.left = posX * 50 + 'px'\n    createDiv.style.top = posY * 50 + 'px'\n    that.container.appendChild(createDiv)\n    that.bombRange.push ({\n      x : posX,\n      y : posY,\n    })\n  }\n\n  setbreakable(posX, posY)\n  {\n    let that = this\n    that.bombBreak.push ({\n      x : posX,\n      y : posY,\n    })\n  }\n\n  viewPossibilty()\n  {\n    let that = this\n    let power = this.power\n    that.bombRange = []\n    for (let i = 1; i <= power; i++)\n    {\n      let newPosX = that.posX\n      let newPosY = that.posY + i\n      if(exportMap[that.posY][that.posX].x ===  exportMapSize - 1)// 2 pour l'ia\n      {\n        break\n      }\n      else if(exportMap[newPosY][newPosX].x ===  exportMapSize - 1)\n      {\n        that.setbreakable(newPosX, newPosY)\n        break\n      }\n      else\n      {\n        if(exportMap[newPosY][newPosX].empty === true)\n        {\n          that.setRange(newPosX, newPosY)\n        }\n        else if (exportMap[newPosY][newPosX].breakable === false)\n        {\n          break\n        }\n        else\n        {\n          that.setbreakable(newPosX, newPosY)\n          break\n        }\n      }\n    }\n\n    for (let i = 1; i <= power; i++)\n    {\n      let newPosX = that.posX\n      let newPosY = that.posY - i\n      if(exportMap[that.posY][that.posX].x ===  0)\n      {\n        break\n      }\n      else if(exportMap[newPosY][newPosX].x ===  0)\n      {\n        that.setbreakable(newPosX, newPosY)\n        break\n      }\n      else\n      {\n        if(exportMap[newPosY][newPosX].empty === true)\n        {\n          that.setRange(newPosX, newPosY)\n        }\n        else if (exportMap[newPosY][newPosX].breakable === false)\n        {\n          break\n        }\n        else\n        {\n          that.setbreakable(newPosX, newPosY)\n          break\n        }\n      }\n    }\n\n    for (let i = 1; i <= power; i++)\n    {\n      let newPosX = that.posX + i\n      let newPosY = that.posY\n      if(exportMap[that.posY][that.posX].y ===  exportMapSize - 1)\n      {\n        break\n      }\n      else if(exportMap[newPosY][newPosX].y ===  exportMapSize - 1)\n      {\n        that.setbreakable(newPosX, newPosY)\n        break\n      }\n      else\n      {\n        if(exportMap[newPosY][newPosX].empty === true)\n        {\n          that.setRange(newPosX, newPosY)\n        }\n        else if (exportMap[newPosY][newPosX].breakable === false)\n        {\n          break\n        }\n        else\n        {\n          that.setbreakable(newPosX, newPosY)\n          break\n        }\n      }\n    }\n\n    for (let i = 1; i <= power; i++)\n    {\n      let newPosX = that.posX - i\n      let newPosY = that.posY\n      if(exportMap[that.posY][that.posX].y ===  0)\n      {\n        break\n      }\n      else if(exportMap[newPosY][newPosX].y ===  0)\n      {\n        that.setbreakable(newPosX, newPosY)\n        break\n      }\n      else\n      {\n        if(exportMap[newPosY][newPosX].empty === true)\n        {\n          that.setRange(newPosX, newPosY)\n        }\n        else if (exportMap[newPosY][newPosX].breakable === false)\n        {\n          break\n        }\n        else\n        {\n          that.setbreakable(newPosX, newPosY)\n          break\n        }\n      }\n    }\n  }\n  destroy()\n  {\n    let that = this\n    for (let i = 0; i < that.bombBreak.length; i++) {\n      let x = that.bombBreak[i].x\n      let y = that.bombBreak[i].y\n      if(exportMap[y][x].empty === false)\n      {\n        let breakDiv = document.querySelector('#block' + y + x )\n        breakDiv.classList.remove('map--break')\n        breakDiv.classList.remove('map--unbreak')\n        exportMap[y][x].empty = true\n        exportMap[y][x].break = null\n        document.querySelector('#bomb'+ that.posXNew + that.posYNew).classList.add('map--explosion')\n        setTimeout(function(){\n          document.querySelector('#bomb'+ that.posXNew + that.posYNew).classList.remove('map--explosion')\n          document.querySelector('#bomb'+ that.posXNew + that.posYNew).style.display = 'none'\n        },200)\n      }\n      else if(exportMap[y][x].empty === true)\n      {\n        document.querySelector('#bomb'+ that.posXNew + that.posYNew).classList.add('map--explosion')\n        setTimeout(function()\n        {\n          document.querySelector('#bomb'+ that.posXNew + that.posYNew).classList.remove('map--explosion')\n          document.querySelector('#bomb'+ that.posXNew + that.posYNew).style.display = 'none'\n        },200)\n      }\n      console.log(playerStatus);\n      console.log(playerStatus[0].x);\n      console.log(that.posXNew);\n      console.log(playerStatus[0].y);\n      console.log(that.posYNew);\n      if (playerStatus[0].x === that.posXNew && playerStatus[0].y === that.posYNew ) {\n        window.alert('You lost !')\n        location.reload();\n      }\n    }\n  }\n\n  create()\n  {\n    let that = this\n    that.setDiv()\n    that.viewPossibilty()\n    bombStatus.push({\n      player: that.player,\n      x: that.posX,\n      y: that.posY,\n      power: 2 * that.power,\n      bombPosibility: that.bombRange,\n      status: true,\n    })\n    setTimeout(function(){ that.destroy() }, that.delay);\n  }\n}\n\nexport default Bomb\n","import {exportMap, exportMapSize} from './game_map.js';\nimport Bomb from './game_bomb.js';\n\nvar playerStatus = []\n\nclass Player\n{\n  constructor(lives, posX, posY, name, startDirection)\n  {\n    this.lives = lives\n    this.startDirection = startDirection\n    this.posX = posX\n    this.posY = posY\n    this.status = startDirection\n    this.div = document.querySelector('.map')\n    this.key = []\n    this.name = name\n    this.index = 0\n  }\n\n  create()\n  {\n    let that = this\n    let createDiv = document.createElement('div')\n    createDiv.classList.add('map--perso')\n    createDiv.classList.add('map--' + that.status)\n    createDiv.setAttribute('id', that.name)\n    that.div.appendChild(createDiv)\n    playerStatus.push({\n      name: that.name,\n      x: that.posX,\n      y: that.posY,\n      BombPower: 2,\n      BombNumber: 1,\n      healthNumber: that.lives,\n      direction: this.startDirection,\n    })\n\n    if(that.name === 'player1')\n    {\n      const perso1 = document.querySelector('#' + playerStatus[0].name)\n      perso1.style.left = playerStatus[0].x + 'px'\n      perso1.style.top  = playerStatus[0].y + 'px'\n      that.index = 0\n    }\n    else if(that.name === 'ia')\n    {\n      const perso2 = document.querySelector('#' + playerStatus[1].name)\n      playerStatus[1].x = exportMapSize - 1\n      playerStatus[1].y = exportMapSize - 1\n      perso2.style.left = playerStatus[1].x * 50 + 'px'\n      perso2.style.top  = playerStatus[1].y * 50 + 'px'\n      that.index = 1\n    }\n  }\n  updateDirection()\n  {\n    let that = this\n    let persoDiv = document.querySelector('#' + that.name)\n    persoDiv.classList.remove('map--perso_down', 'map--perso_up', 'map--perso_right',\n    'map--perso_left')\n    persoDiv.classList.add('map--' + playerStatus[0].direction)\n  }\n\n  movesPerso()\n  {\n    let that = this\n    var nextPos\n    let bombEngage = 0\n    window.addEventListener('keydown', function(e)\n    {\n      if (e.keyCode === that.key[0])\n      {\n        //up\n        let persoDiv = document.querySelector('#' + that.name)\n        nextPos = playerStatus[0].y -1\n        if(nextPos >= 0 )\n        {\n          if(exportMap[nextPos][playerStatus[0].x].empty)\n          {\n            playerStatus[0].y -= 1\n            persoDiv.style.top = playerStatus[0].y * 50 + 'px'\n            playerStatus[0].direction = 'perso_up'\n            that.updateDirection()\n          }\n        }\n        e.preventDefault()\n      }\n      else if (e.keyCode === that.key[1])\n      {\n        //right\n        let persoDiv = document.querySelector('#' + that.name)\n        nextPos = playerStatus[0].x + 1\n        if(nextPos <= exportMapSize )\n        {\n          if(exportMap[playerStatus[0].y][nextPos].empty)\n          {\n            playerStatus[0].x += 1\n            persoDiv.style.left = playerStatus[0].x * 50 + 'px'\n            playerStatus[0].direction = 'perso_right'\n            that.updateDirection()\n          }\n        }\n        e.preventDefault()\n      }\n      else if (e.keyCode === that.key[3])\n      {\n        //left\n        let persoDiv = document.querySelector('#' + that.name)\n        nextPos = playerStatus[0].x - 1\n        if(nextPos >= 0 )\n        {\n          if(exportMap[playerStatus[0].y][nextPos].empty)\n          {\n            playerStatus[0].x -= 1\n            persoDiv.style.left = playerStatus[0].x * 50 + 'px'\n            playerStatus[0].direction = 'perso_left'\n            that.updateDirection()\n          }\n        }\n        e.preventDefault()\n      }\n      else if (e.keyCode === that.key[2])\n      {\n        //down\n        let persoDiv = document.querySelector('#' + that.name)\n        nextPos = playerStatus[0].y + 1\n        if(nextPos <= exportMapSize)\n        {\n          if(exportMap[nextPos][playerStatus[0].x].empty)\n          {\n            playerStatus[0].y += 1\n            persoDiv.style.top = playerStatus[0].y * 50 + 'px'\n            playerStatus[0].direction = 'perso_down'\n            that.updateDirection()\n          }\n        }\n        e.preventDefault()\n      }\n      else if (e.keyCode === that.key[4])\n      {\n        let bombX = playerStatus[0].x\n        let bombY = playerStatus[0].y\n        if (bombEngage < playerStatus[0].BombNumber) {\n          const bomb = new Bomb(0, bombX, bombY, playerStatus[0].BombPower)\n          bomb.create()\n          bombEngage++\n          setTimeout(function()\n          {\n            bombEngage--\n          }, 2000)\n        }\n        e.preventDefault()\n      }\n\n      if (exportMap[playerStatus[0].y][playerStatus[0].x].bonus === 1)\n      {\n        playerStatus[0].BombNumber++\n        exportMap[playerStatus[0].y][playerStatus[0].x].bonus = null\n        let bonus = document.querySelector('#block'+ playerStatus[0].y + playerStatus[0].x)\n        bonus.classList.remove('map--bonus-1')\n        document.querySelector('.bonus--item--2--value').textContent = playerStatus[0].BombNumber\n      }\n      else if (exportMap[playerStatus[0].y][playerStatus[0].x].bonus === 2)\n      {\n        playerStatus[0].BombPower++\n        exportMap[playerStatus[0].y][playerStatus[0].x].bonus = null\n        let bonus = document.querySelector('#block'+ playerStatus[0].y + playerStatus[0].x)\n        bonus.classList.remove('map--bonus-2')\n        document.querySelector('.bonus--item--1--value').textContent = playerStatus[0].BombPower\n      }\n    })\n  }\n}\nexport default playerStatus\n\nconst player1 = new Player(3, 0, 0, 'player1', 'perso_down')\nplayer1.create()\nplayer1.key = [38, 39, 40, 37, 32]\nplayer1.movesPerso()\n\nconst player2 = new Player(3, 0, 0, 'ia', 'perso_up')\nplayer2.create()\n","import playerStatus from './game_characters.js';\nimport {exportMap, exportMapSize} from './game_map.js';\nimport Bomb from './game_bomb.js';\n\nclass Ia {\n  constructor()\n  {\n    this.movePossibility = []\n    this.moveIa = []\n    this.indexMove = -1\n  }\n  viewPossibilty()\n  {\n    let that = this\n\n    if(exportMap[playerStatus[1].x][playerStatus[1].y].y !== 0 )\n    {\n      //up\n      if(exportMap[playerStatus[1].y - 1][playerStatus[1].x].empty === true )\n      {\n        that.movePossibility.push({\n          x: exportMap[playerStatus[1].x][playerStatus[1].y - 1].x,\n          y: exportMap[playerStatus[1].x][playerStatus[1].y - 1].y,\n          breakable: false,\n        })\n      }\n      if(exportMap[playerStatus[1].y - 1][playerStatus[1].x].breakable === true )\n      {\n        that.movePossibility.push({\n          x: exportMap[playerStatus[1].x][playerStatus[1].y - 1].x,\n          y: exportMap[playerStatus[1].x][playerStatus[1].y - 1].y,\n          breakable: true,\n        })\n      }\n    }\n    else if(exportMap[playerStatus[1].x][playerStatus[1].y].y !== exportMapSize - 1 )\n    {\n      //down\n      if(exportMap[playerStatus[1].y + 1][playerStatus[1].x].empty === true )\n      {\n        that.movePossibility.push({\n          x: exportMap[playerStatus[1].x][playerStatus[1].y + 1].x,\n          y: exportMap[playerStatus[1].x][playerStatus[1].y + 1].y,\n          breakable: false,\n        })\n      }\n      if(exportMap[playerStatus[1].y + 1][playerStatus[1].x].breakable === true )\n      {\n        that.movePossibility.push({\n          x: exportMap[playerStatus[1].x][playerStatus[1].y + 1].x,\n          y: exportMap[playerStatus[1].x][playerStatus[1].y + 1].y,\n          breakable: true,\n        })\n      }\n    }\n    if(exportMap[playerStatus[1].x][playerStatus[1].y].x > 0)\n    {\n      //left\n      if(exportMap[playerStatus[1].x - 1][playerStatus[1].y].empty === true )\n      {\n        that.movePossibility.push({\n          x: exportMap[playerStatus[1].x - 1][playerStatus[1].y].x,\n          y: exportMap[playerStatus[1].x - 1][playerStatus[1].y].y,\n          breakable: false,\n        })\n      }\n      if(exportMap[playerStatus[1].x - 1][playerStatus[1].y].breakable === true )\n      {\n        that.movePossibility.push({\n          x: exportMap[playerStatus[1].x - 1][playerStatus[1].y].x,\n          y: exportMap[playerStatus[1].x - 1][playerStatus[1].y].y,\n          breakable: true,\n        })\n      }\n    }\n    else if(exportMap[playerStatus[1].x][playerStatus[1].y].x < exportMapSize - 1 )\n    {\n      //right\n      if(exportMap[playerStatus[1].x + 1][playerStatus[1].y].empty === true )\n      {\n        that.movePossibility.push({\n          x: exportMap[playerStatus[1].x + 1][playerStatus[1].y].x,\n          y: exportMap[playerStatus[1].x + 1][playerStatus[1].y].y,\n          breakable: false,\n        })\n      }\n      if(exportMap[playerStatus[1].x + 1][playerStatus[1].y].breakable === true )\n      {\n        that.movePossibility.push({\n          x: exportMap[playerStatus[1].x + 1][playerStatus[1].y].x,\n          y: exportMap[playerStatus[1].x + 1][playerStatus[1].y].y,\n          breakable: true,\n        })\n      }\n    }\n    that.nextMoves()\n  }\n  nextMoves()\n  {\n    let that = this\n    let lenghtTab = that.movePossibility.length - 1\n    this.nextPos = that.movePossibility[Math.round(lenghtTab*Math.random())]\n    if(this.nextPos.breakable === false)\n      that.movesPerso(this.nextPos.x, this.nextPos.y)\n    else if(this.nextPos.breakable === true)\n    {\n      that.newBomb(this.nextPos.x, this.nextPos.y)\n    }\n  }\n  newBomb(posX, posY)\n  {\n    let that = this\n    let bombX = playerStatus[1].x\n    let bombY = playerStatus[1].y\n    const bomb = new Bomb(0, bombX, bombY, playerStatus[1].BombPower)\n    bomb.create()\n    if(that.moveIa.length >= 2)\n      that.leavePerso(that.moveIa[that.moveIa.length - 3].x, that.moveIa[that.moveIa.length - 3].y)\n    else\n      that.leavePerso(that.moveIa[that.moveIa.length - 1].x, that.moveIa[that.moveIa.length - 1].y)\n    setTimeout(function(){ that.movesPerso(posX, posY)}, 2500);\n  }\n\n  leavePerso(posX, posY)\n  {\n    let persoDiv = document.querySelector('#' + playerStatus[1].name)\n    persoDiv.style.left = posX * 50 + 'px'\n    persoDiv.style.top = posY * 50 + 'px'\n  }\n  movesPerso(posX, posY)\n  {\n    let that = this\n    let persoDiv = document.querySelector('#' + playerStatus[1].name)\n    playerStatus[1].y = posY\n    playerStatus[1].x = posX\n    persoDiv.style.left = posX * 50 + 'px'\n    persoDiv.style.top = posY * 50 + 'px'\n    that.movePossibility = []\n    setTimeout(function(){ that.viewPossibilty() }, 1000);\n    that.moveIa.push({\n      x: posX,\n      y: posY,\n    })\n  }\n}\nconst theIa = new Ia()\ntheIa.viewPossibilty()\n","class Map\n{\n  constructor(size)\n  {\n    this.size = size\n    this.container = document.querySelector('.map')\n    this.gameMap = []\n  }\n\n  createMap()\n  {\n    let that = this\n    for (var i = 0; i < that.size; i++)\n    {\n      this.gameMap.push([])\n      for (var j = 0; j < that.size; j++)\n      {\n        this.gameMap[i].push({\n          x: i,\n          y: j,\n          breakable: null,\n          border: false,\n          empty: true,\n          bonus: null,\n        })\n        let createDiv = document.createElement('div')\n        createDiv.classList.add('map--block')\n        createDiv.setAttribute('id', 'block'+ i + j)\n        that.container.appendChild(createDiv)\n      }\n    }\n    that.setUnbreakable()\n    that.setBreakable()\n  }\n\n  setUnbreakable()\n  {\n    let that = this\n    for (let i = 1; i < that.gameMap.length - 1; i += 2)\n    {\n      for (let j = 1; j < that.gameMap[i].length - 1; j += 2)\n      {\n        that.gameMap[i][j].breakable = false;\n        that.gameMap[i][j].empty = false\n        let unbreakBlock = document.querySelector('#block'+ i + j)\n        unbreakBlock.classList.add('map--unbreak')\n      }\n    }\n  }\n\n  setBreakable()\n  {\n    let that = this\n    for (let i = 0; i < that.gameMap.length; i ++)\n    {\n      for (let j = 0; j < that.gameMap[i].length; j ++)\n      {\n        if\n        ( (i === 0 && j === 0) ||\n          (i === that.gameMap.length - 1 && j === that.gameMap.length - 1) )\n        {\n          let spawnDiv = document.querySelector('#block'+ i + j)\n          spawnDiv.classList.add('map--spawn')\n          that.gameMap[i][j].breakable = null\n        }\n        if\n        ( (i === 1 && j === 0) ||\n          (i === 0 && j === 1) ||\n          (i === that.gameMap.length - 2 && j === that.gameMap.length - 1) ||\n          (i === that.gameMap.length - 1 && j === that.gameMap.length - 2) )\n        {\n          that.gameMap[i][j].breakable = null\n        }\n        else if (that.gameMap[i][j].breakable === null)\n        {\n          let rand = Math.random()\n          if(rand < 0.6)\n          {\n            that.gameMap[i][j].breakable = true\n            that.gameMap[i][j].empty = false\n            let unbreakBlock = document.querySelector('#block'+ i + j)\n            unbreakBlock.classList.add('map--break')\n          }\n        }\n      }\n    }\n  }\n\n  setBonus()\n  {\n    let that = this\n    for (let i = 0; i < that.gameMap.length - 1; i++)\n    {\n      for (let j = 0; j < that.gameMap[i].length - 1; j++)\n      {\n        if (that.gameMap[i][j].breakable === true || that.gameMap[i][j].empty === true)\n        {\n          let rand = Math.random()\n          if (rand <= 0.03) {\n            that.gameMap[i][j].bonus = 1\n            let bonus = document.querySelector('#block'+ i + j)\n            bonus.classList.add('map--bonus-1')\n          }\n          else if (rand <= 0.06) {\n            that.gameMap[i][j].bonus = 2\n            let bonus = document.querySelector('#block'+ i + j)\n            bonus.classList.add('map--bonus-2')\n          }\n        }\n      }\n    }\n  }\n}\n\nconst createMap = new Map(15)\ncreateMap.createMap()\ncreateMap.setBonus()\nvar exportMap = createMap.gameMap\nvar exportMapSize = createMap.size\nexport {exportMap, exportMapSize}\n","import Map from \"./game_map.js\"\nimport Perso from \"./game_characters.js\"\nimport Bomb from \"./game_bomb.js\"\nimport ia from \"./game_ia.js\"\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}